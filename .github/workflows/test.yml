######touch /tmp/keepalive
name: test

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:

env:
  SSH_DEBUG: 'true'
  SSH_TIME: '5h'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: setup ssh for debug 
      if: env.SSH_DEBUG == 'true'
      continue-on-error: true  # 允许失败但不终止工作流
      env:
        SSH_SETUP_SUCCESS: ${{ env.SSH_SETUP_SUCCESS }}
      run: |
        # 允许root登录并设置root密码
        echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config 
        if [ -n "${{ secrets.SSH_PW }}" ]; then
          echo "root:${{ secrets.SSH_PW }}" | sudo chpasswd
        else
          echo "root:123" | sudo chpasswd
        fi
    
        # 重启SSH服务
        sudo service sshd restart
    
        # 配置和启动frpc
        if [ -n "${{ secrets.FRPC_CONFIG }}" ]; then
          # 使用提供的frpc配置
          echo "${{ secrets.FRPC_CONFIG }}" > ./frpc.ini
          chmod +x ./frpc && ./frpc -c ./frpc.ini &
        else
          # 生成随机端口并配置frpc
          max_attempts=10
          attempts=0

          while [ $attempts -lt $max_attempts ]; do
            random_port=$(shuf -i 10000-50000 -n 1)
            cp frpc.ini.example frpc.ini
            sed -i "s/\[ssh2action\]/\[ssh2action$random_port\]/g" frpc.ini
            sed -i "s/remote_port = 22222/remote_port = $random_port/g" frpc.ini
            echo "remote_port = $random_port=" > ./frpc.ini
            chmod +x ./frpc && ./frpc -c ./frpc.ini > ./frpc.log 2>&1 &
            sleep 5
            # 检查frpc启动错误
            if grep -q "start proxy success" ./frpc.log; then
              echo "===========frpc启动成功!=========="
              echo "=========以下是SSH连接命令========="
              echo "ssh root@$(grep -E 'server_addr\s*=' frpc.ini | cut -d'=' -f2 | tr -d '[:space:]') -p $random_port"
              export SSH_SETUP_SUCCESS=true
              break
            else
              echo "错误：frpc启动失败!重试中..."
              pkill frpc
              attempts=$((attempts+1))
            fi
          done

          if [ $attempts -eq $max_attempts ]; then
              echo "警告：尝试启动frpc $max_attempts 次仍然失败。请自行配置FRPC_CONFIG字段"
              export SSH_SETUP_SUCCESS=false
          fi
        fi

    - name: suspend
      if: env.SSH_SETUP_SUCCESS == 'true'
      run: |
        echo "${{ env.SSH_TIME }}后,将继续进行工作流"
        sleep ${{ env.SSH_TIME }}
        echo "${{ env.SSH_TIME }}时间结束,继续进行工作流"

    - name : Upload artifact
      uses: actions/upload-artifact@master
      continue-on-error: true
      with:
        name: lede
        path: lede/bin/targets/
     
    - name : disk space check
      run: df -h
      continue-on-error: true 
