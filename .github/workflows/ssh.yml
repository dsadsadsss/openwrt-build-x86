#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================
######touch /tmp/keepalive
name: Build_ssh

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

#    - name: Initialization environment
#      env:
#        DEBIAN_FRONTEND: noninteractive
#      run: |
#        set +e
#        docker rmi `docker images -q`
#        echo "Deleting files, please wait ..."
#        sudo rm -rf \
#          /usr/share/dotnet \
#          /etc/mysql \
#          /etc/php
#        sudo -E apt-get -y purge \
#          azure-cli \
#          ghc* \
#          zulu* \
#          hhvm \
#          llvm* \
#          firefox \
#          google* \
#          dotnet* \
#          powershell \
#          openjdk* \
#          mysql* \
#          php*
#        sudo -E apt-get update
#        sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
#        sudo -E apt-get -y autoremove --purge
#        sudo -E apt-get clean


#    - name: Clone source code
#      env: 
#        REPO_URL: https://github.com/coolsnowwolf/lede
#        REPO_BRANCH: master
#      run: |
#        git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
#        mv ./feeds/lede_feeds.conf.default ./lede/feeds.conf.default
#        mv ./customize/lede_customize.sh ./lede/customize.sh
#        chmod +x ./lede/customize.sh
        
#    - name: Update & Install feeds
#      working-directory: ./lede
#      run: |
#        ./scripts/feeds update -a
#        ./scripts/feeds install -a
#        ./scripts/feeds install -a
#        ./customize.sh

#    - name: Configuration Customization - Build_x86_64
#      env:
#        CONFIG_FILE: './config/lede_x86_64.config'
#      run: |
#        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
#        cd lede && make defconfig


#    - name: setup docker
#      uses: docker-practice/actions-setup-docker@master
#      timeout-minutes: 12
    
#    - name: setup ssh for debug 
#      run: |
#        ifconfig
#        ifconfig eth0 | grep -oP 'inet \K[\d.]+'
#        mkdir -p $PWD/frpc
#        echo "${{ secrets.FRPC_CONFIG }}" > $PWD/frpc/frpc.ini
#        docker run -d --net=host --name=frpc  -v $PWD/frpc/frpc.ini:/frp/frpc.ini -v $PWD:/debug af0083/frpc-docker
#        docker ps
#        cat /etc/ssh/sshd_config
#        ps -aux|grep ssh*

    - name: setup ssh for debug 
      run: |
        cat /etc/ssh/sshd_config
        cat /etc/passwd
        echo "${{ secrets.FRPC_CONFIG }}" > ./frpc.ini
        echo "PermitRootLogin yes" >> /etc/ssh/sshd_config && echo "root:123" |chpasswd && service sshd restart 
        chmod +x ./frpc && ./frpc -c ./frpc.ini

    - name : sleep
      run: |
        sleep 1h
