name: LEDE_x86_64

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:

env:
  SSH_DEBUG: 'flase'
  SSH_TIME: '30m'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
        sudo -E apt-mark hold grub-efi-amd64-signed
        sudo -E apt update
        sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
        sudo -E apt -y full-upgrade
        sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo -E systemctl daemon-reload
        sudo -E apt -y autoremove --purge
        sudo -E apt clean
        sudo -E timedatectl set-timezone "Asia/Shanghai"

    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
        mv ./feeds/lede_feeds.conf.default ./lede/feeds.conf.default
        mv ./customize/lede_customize.sh ./lede/customize.sh
        chmod +x ./lede/customize.sh
        
    - name: Update & Install feeds
      working-directory: ./lede
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
        ./customize.sh

    - name: Configuration Customization - Build_x86_64
      env:
        CONFIG_FILE: './config/lede_x86_64.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE lede/.config
        cd lede && make defconfig

    - name: setup ssh for debug 
      if: env.SSH_DEBUG == 'true'
      run: |
        echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config 
        echo "root:${{ secrets.SSH_PW }}" |sudo chpasswd 
        sudo service sshd restart
        echo "${{ secrets.FRPC_CONFIG }}" > ./frpc.ini
        chmod +x ./frpc && ./frpc -c ./frpc.ini &
        sleep ${{ env.SSH_TIME }}
        echo "Continue the workflow"

        
    - name: Download package
      working-directory: ./lede
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        df -h

    - name: Build firmware
      working-directory: ./lede
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s || make -j1 V=s
        df -h

    - name : Upload artifact
      uses: actions/upload-artifact@master
      continue-on-error: true
      with:
        name: lede
        path: lede/bin/targets/
     
    - name : disk space check
      run: df -h
      continue-on-error: true    
